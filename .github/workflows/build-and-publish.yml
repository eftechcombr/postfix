name: Build and Publish

on:
  workflow_dispatch: 
  push:
    branches:
      - "dev"
      - "latest"
  # pull_request:
  #   branches:
  #     - "latest" 

env:
  REGISTRY: "docker.io"
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry 
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
            type=ref,enable=true,priority=600,prefix=,suffix=,event=branch
            type=raw,value=${{ github.ref_name }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Use the token
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPO_DESTINATION: "eftechcombr/iac"
        run: |
          gh api octocat 
          
      - name: create a repository_dispatch event
        if: ${{ github.ref_name }} == 'dev' 
        env: 
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPO_DESTINATION: "eftechcombr/iac"
          PATH_DESTINATION: "files/kubernetes/sandbox/postfix"
        run: |
          read -r -d '' PAYLOAD <<-JSON
          {
            "event_type": "update-repo", 
            "client_payload": {
              "sha": "${{ github.sha }}", 
              "from": "${{ github.repository}}", 
              "branch": "${{ github.ref_name}}", 
              "destination": "${{ env.PATH_DESTINATION }}"
            }
          }
          JSON

          echo "$PAYLOAD" | gh api --method POST "repos/${{ env.REPO_DESTINATION }}/dispatches" \
          --header "Accept: application/vnd.github+json" \
          --header "X-GitHub-Api-Version: 2022-11-28" --input -
 